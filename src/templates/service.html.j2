<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <title>Informe de Servicio {{ service_id }}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta rel="robots" content="noindex, nofollow">
    <link rel="stylesheet" href="https://fonts.bunny.net/css?family=inter:300,400,700">
    <meta name="description" content="Informe de servicio {{ service_id }} del {{ date }}. Incluye detalles de viaje, distancias y paradas.">
    <style>
        * {
            box-sizing: border-box;
            font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
        }

        body {
            padding: 1.5rem;
            background-color: #fff;
            line-height: 1.5;
            max-width: 800px;
            margin: 0 auto;
        }

        h1 {
            text-align: center;
            font-size: 1.75rem;
            margin-bottom: 1rem;
            font-weight: 600;
        }

        .navigation {
            margin-bottom: 1.5rem;
            font-size: 0.9rem;
        }

        .trip-container {
            border: 1px solid #ddd;
            border-radius: 6px;
            background-color: #fafafa;
            box-shadow: 0 2px 4px rgba(0,0,0,0.08);
            margin-bottom: 1rem;
            overflow: hidden;
        }

        .trip-header {
            display: flex;
            background-color: #fff;
            border-bottom: 1px solid #eee;
            padding: 0.6rem 0.8rem;
        }

        .trip-header .route {
            font-weight: bold;
            font-size: 1.1rem;
            min-width: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-right: 1px solid #ddd;
            margin-right: 0.5rem;
            padding-right: 0.5rem;
        }

        .trip-header .headsign {
            flex-grow: 1;
            font-weight: 500;
        }

        .trip-header .distance {
            min-width: 80px;
            text-align: right;
            font-weight: 500;
        }

        .trip-details {
            display: flex;
            flex-wrap: wrap;
        }

        .trip-leg {
            flex: 1;
            min-width: 280px;
            padding: 0.75rem;
        }

        .trip-leg:first-child {
            border-right: 1px solid #ddd;
        }

        .trip-time {
            font-weight: 600;
            font-family: 'Consolas', monospace;
            font-size: 1.1rem;
        }

        .trip-stop {
            margin-top: 0.25rem;
            color: #333;
        }
        
        /* Day change marker */
        .day-change-marker {
            background-color: #fff3cd;
            border: 2px solid #f5c86a;
            color: #856404;
            text-align: center;
            padding: 0.75rem;
            margin: 1rem 0;
            border-radius: 4px;
            font-weight: bold;
        }

        /* Total distance counter */
        .total-distance {
            text-align: right;
            font-weight: bold;
            padding: 0.75rem;
            margin-top: 1.5rem;
            border-top: 1px solid #ddd;
            background-color: #f9f9f9;
            border-radius: 4px;
        }

        /* Highlight current trip */
        .trip-container.highlight { box-shadow: 0 0 8px rgba(0,116,217,0.6); border-color: #0074d9; padding: 1rem; }

        /* Media query for print */
        @media print {
            body {
                padding: 0;
                margin: 0;
            }

            .trip-container {
                page-break-inside: avoid;
                border: 1px solid #000;
                margin-bottom: 0.5rem;
            }

            .trip-header {
                background-color: #f5f5f5 !important;
            }

            .day-change-marker {
                border: 1px solid #000;
                background-color: #f5f5f5 !important;
                color: #000;
            }

            .navigation {
                display: none;
            }
        }

        {{ css_classes }}
    </style>
</head>

<body>
    <h1>Servicio {{ service_id }}</h1>
    <div class="navigation">
        <a href="../index.html">Servicios</a> &gt; <a href="./index.html">{{ date }}</a>
    </div>

    {% set day_changes = [] %}
    {% for row in trip_rows %}
        {% set current_time = row.first_arrival %}
        {% set current_hour = current_time.split(':')[0]|int %}
        {# Day change marker #}
        {% if current_hour >= 24 and day_changes|length == 0 %}
            <div class="day-change-marker">
                Cambio de día (00:00 - día siguiente)
            </div>
            {% set _ = day_changes.append(1) %}
        {% endif %}
        {# Trip container - each trip gets its own container with clear visual separation #}
        <div class="trip-container trip-line-{{ row.route_short_name|replace(' ', '-')|replace('.', '-') }}" data-start="{{ row.first_arrival }}" data-end="{{ row.last_arrival }}">
            <div class="trip-header">
                <div class="route">{{ row.route_short_name }}</div>
                <div class="headsign">{{ row.headsign }}</div>
                <div class="distance">{{ row.distance|replace('.', ',') }} km</div>
            </div>
            <div class="trip-details">
                <div class="trip-leg">
                    <div class="trip-time">
                        {% if current_hour >= 24 %}
                            {{ (current_hour - 24)|string }}:{{ current_time.split(':')[1] }}:{{ current_time.split(':')[2] }}
                        {% else %}
                            {{ current_time }}
                        {% endif %}
                    </div>
                    <div class="trip-stop">{{ row.first_stop_name }}</div>
                </div>
                <div class="trip-leg">
                    {% set last_hour = row.last_arrival.split(':')[0]|int %}
                    <div class="trip-time">
                        {% if last_hour >= 24 %}
                            {{ (last_hour - 24)|string }}:{{ row.last_arrival.split(':')[1] }}:{{ row.last_arrival.split(':')[2] }}
                        {% else %}
                            {{ row.last_arrival }}
                        {% endif %}
                    </div>
                    <div class="trip-stop">{{ row.last_stop_name }}</div>
                </div>
            </div>
            <div style="text-align:right; margin:0.5em 1em 0.5em 0;">
                <a href="../trips/{{ row.trip_id }}.html" target="_blank" style="color:#0074d9; text-decoration:underline; font-size:0.98em;">Ver detalle del viaje &rarr;</a>
            </div>
        </div>
    {% endfor %}

    <div class="total-distance">
        Total: {{ total_distance|replace('.', ',') }} km
    </div>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const pageDate = '{{ date }}';
        const today = new Date().toISOString().slice(0,10);
        if (pageDate === today) {
            const now = new Date();
            const containers = Array.from(document.querySelectorAll('.trip-container'));
            // Highlight current trip if any
            let currentFound = null;
            containers.forEach(div => {
                const start = div.getAttribute('data-start');
                const end = div.getAttribute('data-end');
                if (start && end) {
                    const [sh, sm, ss] = start.split(':').map(Number);
                    const [eh, em, es] = end.split(':').map(Number);
                    const year = now.getFullYear(), month = now.getMonth(), day = now.getDate();
                    const startDate = new Date(year, month, day, sh, sm, ss);
                    const endDate = eh >= 24
                        ? new Date(year, month, day + 1, eh - 24, em, es)
                        : new Date(year, month, day, eh, em, es);
                    if (now >= startDate && now <= endDate) {
                        currentFound = div;
                    }
                }
            });
            if (currentFound) {
                currentFound.classList.add('highlight');
                currentFound.scrollIntoView({behavior: 'smooth', block: 'center'});
            } else {
                // Insert rest div between last past and next future
                let prev = null, next = null;
                const times = containers.map(div => {
                    const start = div.getAttribute('data-start');
                    const end = div.getAttribute('data-end');
                    const [sh, sm, ss] = start.split(':').map(Number);
                    const [eh, em, es] = end.split(':').map(Number);
                    const year = now.getFullYear(), month = now.getMonth(), day = now.getDate();
                    const startDate = new Date(year, month, day, sh, sm, ss);
                    const endDate = eh >= 24
                        ? new Date(year, month, day + 1, eh - 24, em, es)
                        : new Date(year, month, day, eh, em, es);
                    return {div, startDate, endDate};
                });
                times.forEach(({div, startDate, endDate}) => {
                    if (endDate <= now && (!prev || endDate > prev.endDate)) prev = {div, endDate};
                    if (startDate >= now && (!next || startDate < next.startDate)) next = {div, startDate};
                });
                const restDiv = document.createElement('div');
                restDiv.className = 'trip-container highlight';
                restDiv.textContent = 'Actual en descanso';
                if (prev && prev.div.nextSibling) {
                    prev.div.parentNode.insertBefore(restDiv, prev.div.nextSibling);
                } else if (next) {
                    next.div.parentNode.insertBefore(restDiv, next.div);
                } else {
                    document.body.insertBefore(restDiv, document.querySelector('.total-distance'));
                }
                restDiv.scrollIntoView({behavior: 'smooth', block: 'center'});
            }
        }
    });
    </script>
    <div class="footer">
        Generado con fecha {{ generated_at.strftime('%Y-%m-%d %H:%M:%S %Z') }}
    </div>
</body>
</html>